<!DOCTYPE html>
<html>

<head>
    <meta http-equiv="content-type" content="text/html; charset=UTF-8">
    <title>MinUSc - Visualisation de Minéraux</title>
    <link href="css/jdrums.css" type="text/css" rel="stylesheet">
    <link href="css/styles.css" type="text/css" rel="stylesheet">

    <link rel="shortcut icon" href="../favicon.ico">
    <script src="j/JSmol.min.js"></script>
    <script src="scripts/atomes.js"></script>
    <script src="scripts/fichiers.js"></script>
    <script src="scripts/formule.js"></script>
    <script src="scripts/init.js"></script>
    <script src="scripts/ui.js"></script>
    <script type="text/javascript">
        var nb_atomes = 270,
            initscript = "select all; color cpk; spacefill 20%; wireframe 0.15;",
            atoms = [{
                'symbol': 'Si',
                'charge': 4,
                'occupancy': 1
                    }, {
                'symbol': 'O',
                'charge': -2,
                'occupancy': 1
                    }],
            volume = 112.9,
            systeme = "Hexagonal",
            no_avogadro = 6.022 * Math.pow(10, 23),
            crystal_type = "ionic";



        /*
        			states = new Array();
                    function snapshot_dossier() {
        				new Ajax.Request("www/snapshot.php", {
        					method : 'post',
        					parameters : {
        						action : 'importation'
        					},
        					onSuccess : function(transport) {
        						snapshot(transport.responseText.split('#;.;#'));
        					}
        				})
        			}

        			function snapshot(origine) {
        				if (origine) {
        					var image = origine[0];
        					var state_data = origine[1];
        				} else {
        					var image_data = jmolGetPropertyAsString("image");
        					var image = "data:image/jpeg;base64," + image_data;
        					var state_data = jmolGetPropertyAsString("stateInfo") + etat_menu_mailles();
        				}
        				var num = states.length;
        				states[num] = state_data;
        				var vignette = new Element('img', {
        					'src' : image,
        					'id' : 'vignette' + num,
        					'class' : 'vignette'
        				})
        				var lien = new Element('a', {
        					'href' : "javascript: nettoieScript(states[" + num + "]);"
        				}).update(vignette);

        				var num = $('#thumbnails').childNodes.length;
        				var poubelle = new Element('img', {
        					'src' : 'images/effacer.gif'
        				})
        				var supprimer = new Element('a', {
        					'href' : "javascript: pan_commande.galerie.kill(" + num + ")"
        				}).update(poubelle);

        				var conteneur = document.createElement("div");
        				conteneur.appendChild(lien);
        				conteneur.appendChild(supprimer);

        				$('#thumbnails').appendChild(conteneur);

        				pan_commande.panneau.show('galerie', 4);

        				//pour la version en ligne, créer une image sur le serveur et la renvoyer
        				if ((!origine) && (document.location.href.indexOf('http') == 0))
        					new Ajax.Request("www/snapshot.php", {
        						method : 'post',
        						parameters : {
        							action : 'cliche',
        							data : image_data,
        							spt : state_data
        						},
        						onSuccess : function(transport) {
        							//alert(transport.responseText);
        							$('#vignette' + num).src = transport.responseText;
        							//alert(dump($('#vignette'+num)));

        						}
        					});
        			}
        */

        //	function nettoieScript(spt) {
        //		if (spt.indexOf("/*SPLIT*/") == -1) {
        //			var pos = spt.indexOf("javascript");
        //			var spt1 = spt.substring(0, pos - 1);
        //			var spt2 = spt.substring(pos);
        //			spt = spt1 + "/*SPLIT*/;" + spt2 + "; javascript initialiser()"
        //		}
        //		Jmol.script(minusc, spt)
        //	}

        function etat_menu_mailles() {
            var sel = [];
            $('#cells select').each(function () {
                sel.push(this.disabled);
            });

            var disabled = $('#cells select').prop('disabled');
            spt = '/*SPLIT*/; javascript "initialiser_menu_mailles(' + disabled + ',[' + sel.join(',') + '])"; javascript initialiser()';
            return spt;
        }

        function initialiser_menu_mailles(disabled, selection) {
            var disabled = disabled || false;
            var selection = selection || Array(0, 0, 0);

            $('#cells select').each(function (index) {
                this.selectedIndex = selection[index];
                this.disabled = disabled;
            });
        }

        function initialiser(flag) {
            extraction_info();
            pan_commande = new Imh();
            if (!flag)
                initialiser_menu_mailles();
            activer_panneau("controle");
            if (is_mode_formule) {
                is_mode_formule = false;
                $("#activer_mailles").css('display', 'none');
                executer("set pickcallback 'messagesClics'; set echo compteur; echo ;")
            }
            if (crystal_type == 'molecular') {
                $(".is_bouton_molecular").css('display', 'inline');
                $(".is_menu_molecular").css('display', 'block');
                $(".is_not_molecular").css('display', 'none');

                pan_commande.commandes.baton_off.script += '; hbonds off;';

                var a = Jmol.evaluate(minusc, "{cell={1 1 1}}.molecule.all.count().sort(2).reverse[1].find('\\\\d')[1]");

                var spt = "select all; color translucent 0.85; ";
                spt += "select molecule=" + a + "; define molmaille selected; wireframe 0.15; cpk 20%; color cpk; color translucent 0; ";
                spt += "select within(molecule,within(2.7,molmaille)); display selected or displayed; select selected and not molmaille; define contact_molecule selected; color translucent 0.7; ";
                spt += "select within(2.7,molmaille) and not molmaille; color translucent 0; select all; "
                spt += "contact ID \"molecular_contact\" {molmaille} "

                pan_commande.commandes.contact_vdw.script = spt + "surface";
                pan_commande.commandes.contact_full.script = spt + "full";
                pan_commande.commandes.contact_connect.script = spt + "connect";


            } else {
                $(".is_bouton_molecular").css('display', 'none')
                $(".is_menu_molecular").css('display', 'none')
                $(".is_not_molecular").css('display', 'block')
            }

        }

        function extraction_info_maille() {
            function determination_systeme(txt) {
                var sys = 'Non déterminé';
                var num = parseInt(txt);
                if (isNaN(num)) {

                } else {
                    if (num < 3)
                        sys = "Triclinique";
                    else if (num < 16)
                        sys = "Monoclinique";
                    else if (num < 75)
                        sys = "Orthorhombique";
                    else if (num < 143)
                        sys = "Tétragonal";
                    else if (num < 168)
                        sys = "Trigonal";
                    else if (num < 195)
                        sys = "Hexagonal";
                    else
                        sys = "Cubique";
                }
                return sys;
            }

            //show unitcell : a=4.91239, b=4.91239, c=5.40385, alpha=90.0, beta=90.0, gamma=120.0
            var unitcell = Jmol.evaluate(minusc, 'script("show unitcell")');
            var uP = unitcell.match(/[0-9\.]+/g);
            //console.log([unitcell,uP])

            //calcul du volume
            var v = 1;
            for (var i = 0; i < 6; i++) {
                if (i < 3) {
                    v = v * parseFloat(uP[i]);
                } else {
                    v = v * Math.sin(parseFloat(uP[i]) / 180 * Math.PI);
                }
            }

            //détermination du système cristallin
            var s = Jmol.evaluate(minusc, "script('show spacegroup').split().find('international table number').find('\\\\d+','m')");
            systeme = determination_systeme(s);

            volume = v;
            //console.log(v + systeme);
        }

        function extraction_info() {
            function charge(valeur) {
                var ret = "";

                var signe = "";
                if (valeur < 0)
                    signe = "-";
                else if (valeur > 0)
                    signe = "+";

                var val = Math.abs(valeur);
                if (val > 1)
                    return val + signe;
                else
                    return signe;
            }

            extraction_info_maille();

            var elements = Jmol.evaluateVar(minusc, '{unitcell}.element');
            elements = elements.reduce((acc, el) => {
                if (acc.indexOf(el) === -1) acc.push(el);
                    return acc;
            }, []);

            if (crystal_type === 'metal' && elements.reduce(function (acc, el) {
                return acc && metallic_radius[el] !== undefined
            }, true)) {
                var spt_spheres = '';
                    if (elements.length === 1) {
                        var r = metallic_radius[elements[0]];
                        spt_spheres += '; function sphere(){cpk ' + r +'} function sphere25(){cpk ' + r *0.25 + '}';
                    } else {
                        spts_parts = elements.reduce((acc, el) => {
                            var r = metallic_radius[el];
                            return [
                                acc[0] + 'select pre and _' + el + '; cpk ' + r + '; ',
                                acc[1] + 'select pre and _' + el + '; cpk ' + r * 0.25 + '; '
                            ];
                        }, ['', '']);
                        spt_spheres += '; function sphere(){ define pre;' + spts_parts[0] +' select pre} function sphere25(){ define pre;' + spts_parts[1] +' select pre}';
                    }
                    Jmol.script(minusc, spt_spheres);
            }

            if (elements) {
                var spt = "'['+";

                for (var i = 0, l = elements.length; i < l; i++) {
                    spt += "'{\"charge\":'+{_" + elements[i] + "}[0].charge+',\"occupancy\":'+{_" + elements[i] + "}.occupancy+',\"ionic\":'+{_" + elements[i] + "}[0].ionic+',\"symbol\":\"'+{_" + elements[i] + "}[0].symbol+'\"},'+";
                }
                var r = Jmol.evaluate(minusc, spt.slice(0, -3) + "'+']'");

                atoms = JSON.parse(r);

                if (crystal_type === 'metal') {
                    atoms.forEach(function (atom) {
                        if (metallic_radius[atom.symbol]) atom.ionic = metallic_radius[atom.symbol];
                    })
                }
                //console.log(atoms);

                //atoms = new Array();
                var legende = [];
                //legende.cpk.length=0;
                for (var i = 0, imax = atoms.length; i < imax; i++) {
                    atoms[i].volumeTotal = 0;
                    atoms[i].masseTotale = 0;
                    atoms[i].chargeTotale = 0;
                    atoms[i].nbTotal = 0

                    var sym = atoms[i].symbol
                    if (sym == '')
                        continue;
                    //atoms.push(liste[i]);
                    var spt = atomes[sym];

                    atoms[i].txtCharge = charge(atoms[i].charge);

                    if (typeof (spt) == 'string') {
                        legende.push({
                            'text': sym,
                            'script': spt,
                            'classe': sym.toLowerCase(),
                            'charge': atoms[i].txtCharge
                        });
                    }
                }
                if (legende.length > 0) {
                    legendes.cpk = legende;
                    actualise_legende(legende);
                }
            }
        }

        function renvoyerMessages(applet, txt) {
            if (txt.indexOf('Script completed') > -1) {
                actualise_messages();
            } else
                messages.push(txt)
            return;

        }

        var messages = Array();

        function actualise_messages() {

            function message_erreur(t) {
                return "<img src='images/warning.gif' align='middle'/><span style='color: red;'>" + t + "</span>\n";
            }

            function message_debut_script(t) {
                t = t.substring(0, t.indexOf('started'))
                return "<span class='script'>" + t + "</span>\n"
            }

            function message_script_entre(t) {
                return "<span class='spt'>" + t + "</span>";
            }

            function texte_message(t) {
                var ret = true;
                if (t.indexOf('ERREUR') == 0) {
                    t = message_erreur(t);
                } else if (t.indexOf('started') > 7) {
                    t = message_debut_script(t);
                    ret = false;
                } else if (t.indexOf('>') == 0) {
                    t = message_script_entre(t);
                }

                return t + ((ret) ? "<br />\n" : "\n");
                console.log(t);
            }

            destination = document.getElementById('messages')
            var txt = ""

            for (var i = 0, j = messages.length; i < j; i++) {
                txt = texte_message(messages[i]) + txt;
            }
            destination.innerHTML = txt + destination.innerHTML;
            messages = [];
        }

        function ajouterMessage(txt) {
            messages.push(">" + txt)
                //alert(message);
        }

        var busy = false;
        var encours = new Image();
        encours.src = "images/spinner.gif";
        var fini = new Image();
        fini.src = "images/noir.gif";

        function debutScript() {
            busy = true;
            //$('busy').style.background="white";
            $('#busy-icon').src = encours.src;
        }

        function finScript() {
            busy = false;
            //$('busy').style.background="black";
            $('#busy-icon').src = fini.src;
        }

        function isBusy() {
            if (busy)
                alert('Script en cours, veuillez patienter');
            return busy;
        }

        function executer(cmds) {
            if (cmds == "")
                return;
            var occupe = isBusy();
            if (occupe) {
                return;
            }
            debutScript();
            ajouterMessage(cmds);
            pan_commande.ligne_commande.ajouter(cmds);
            Jmol.script(minusc, cmds);
            finScript();
            //renvoyerMessages(message);
        }


        /*
        			function undo() {
        				answer = Jmol.evaluate(minusc, "script('show history; history on;')");
        				listing = answer[0][0][3];
        				console.log(answer)//+'!! '+listing);
        				pieces = listing.split(' #|;');
        				fin = pieces[pieces.length - 1].split('|');
        				debut = pieces.slice(0, -1);
        				listing = debut.concat(fin);

        				while (listing[listing.length - 1] == ' ') {
        					listing.length--;
        				}
        				spt = '';

        				for ( i = 0; i < listing.length - 1; i++) {
        					if ((listing[i] != '') && (listing[i].indexOf('#??') == -1))
        						spt += listing[i] + ' #|;';
        				}
        				if (listing[0].indexOf(initscript) == -1) {
        					spt = initscript + ' #|;' + spt;
        				}
        				//console.log(spt);
        				executer(spt);
        			}
        */
        function analyse_message(txt) {
            if (txt.indexOf('atoms selected') > 0) {
                nb_atomes = parseInt(txt);
                return nb_atomes + ' atome(s) s&eacute;lectionn&eacute;(s)';
            } else if (txt.indexOf('Script completed') == 0) {
                //actualise_nb_atomes(nb_atomes);
                actualise_messages();
                finScript();
                return '';
            } else if (txt.indexOf('atoms hidden') > 0) {
                nb_atomes_caches = parseInt(txt);
                return nb_atomes_caches + ' atome(s) cach&eacute;(s)';
            } else if (txt.indexOf('script ERROR') != -1) {
                return "<img src='images/warning.gif' align='middle'/><span style='color: red;'>" + txt + "</span>";
            }
            return txt;
        }


        function charger_fichier(mineral) {
            var filename_spt = ' {3,3,3}; history on; set echo bottom left;font echo 20 arial bold; color echo steelblue; echo "' + mineral + '"; ',
                f = liste_fichiers[mineral],
                spt_spheres = '',
                connect_script = (f.hasOwnProperty('script')) ? f.script : '';

            crystal_type = (f.hasOwnProperty('type')) ? f.type : "ionic";


            switch (crystal_type) {
                case 'metal':
                case 'ionic':
                    spt_spheres = "; function sphere(){cpk ionic}; function sphere25(){cpk 25%};";
                    break;

                case 'molecular':
                default:
                    spt_spheres = "; function sphere(){cpk} ; function sphere25(){cpk 25%};";
                    break;
            }
                initscript = filename_spt + initscript0 + connect_script + spt_spheres + "; crystal_type = '" + crystal_type + "'; javascript initialiser(); zoomto 0.6 {displayed} 100;";
            //spt = "load \"jmol/" + f[0] + "\" {5,5,5}; history on; " + filename_spt + initscript + ";/*SPLIT*/;"

            Jmol.script(minusc, "load \"cif/" + f.file + "\"" + initscript);

            is_mode_formule = false;
        }
    </script>
</head>

<body class="texte">
    <div id="visualisation">
        <div id="applet">

        </div>
        <div id="legende">
            <div id="busy" style="background: #000;"><img id="busy-icon" src="images/noir.gif" height="16" width="16">
            </div>
            <div id="nb_atomes"> </div>
            <div id="clic"> </div>
            <div style="padding: 5px;">
                <form action="#" method="get" name="cells" id="cells" style="margin: 0px; padding: 0px; display: inline;" onsubmit="false;">
                    Mailles : a:
                    <select name="a" onchange="actualise_cell()" style="width: 4em;">
                        <option value="1" selected="selected">1</option>
                        <option value="2">2</option>
                        <option value="3">3</option>
                    </select>

                    b:
                    <select name="b" onchange="actualise_cell()" style="width: 4em;">
                        <option value="1" selected="selected">1</option>
                        <option value="2">2</option>
                        <option value="3">3</option>
                    </select>

                    c:
                    <select name="c" onchange="actualise_cell()" style="width: 4em;">
                        <option value="1" selected="selected">1</option>
                        <option value="2">2</option>
                        <option value="3">3</option>
                    </select>
                    <span id="activer_mailles"><a href="#" onclick="mode_formule('off')">Désactiver Mode formule</a></span>
                    <!--<span id="navigation"><a href="#" onclick="pan_commande.commandes.navigate.run()">Navigation</a></span>-->
                </form>
            </div>
            Sélectionner
            <br> Atomes : <span id="liste_atomes" style="font-weight: bold"><a class="o" href="#" onclick="executer('select oxygen; flash'); return false;">O</a> <a class="si" href="#" onclick="executer('select silicon; flash'); return false;">Si</a></span> - <span style="font-weight: bold"> <a class="h" href="#" onclick="executer('select all; flash'); return false;">Tous</a> <a class="h" href="#" onclick="executer('select none; flash'); return false;">Aucun</a></span>
        </div>
    </div>
    <div id="conteneur_droit">
        <div id="onglets">
            <ul class="onglet">
                <li>
                    <a href="#" onclick="activer_panneau('controle'); return false;">Commandes</a>
                </li>
                <li>
                    <a href="#" onclick="activer_panneau('fichier'); return false;">Fichier</a>
                </li>
                <li>
                    <a href="#" onclick="activer_panneau('formule'); mode_formule(); return false;">Formule</a>
                </li>
            </ul>
        </div>

        <div id="controle">
            <div id="menu">
                <!--<div id="annuler">-->
                <!-- <a class="bouton_droit" href="javascript: undo()">-->
                <!--<img src="images/undo.gif" border="0"><br>Annuler</a>-->
                <!--<a href="#" onClick="redo()"><img src="images/redo.gif" border="0"></a>-->
                <!--</div><div id="snapshot">-->
                <!--</div>-->
                <!--<div class="barre_boutons">-->
                <fieldset>
                    <legend>
                        Afficher atomes
                    </legend>
                    <a class="bouton" href="javascript: pan_commande.commandes.cpk_ionic.run()"><img src="images/cpk100pc.gif" border="0" height="40" width="40">
                        <br> Sphères
                    </a>
                    <a class="bouton" href="javascript: pan_commande.commandes.cpk_20.run()"><img src="images/cpk20pc.gif" border="0" height="40" width="40">
                        <br> Sphères 20%</a>
                    <a class="bouton" href="javascript: pan_commande.commandes.cpk_off.run()"><img src="images/noir.gif" border="0" height="40" width="40">
                        <br> Effacer
                    </a>
                </fieldset>
                <!--</div>-->
                <fieldset>
                    <legend>
                        Afficher liaisons
                    </legend>
                    <a class="bouton" href="javascript: pan_commande.commandes.baton.run()"><img src="images/baton.gif" border="0" height="40" width="40">
                        <br> Bâtonnets
                    </a>
                    <a class="bouton" href="javascript: pan_commande.commandes.fdf.run()"><img src="images/fil2fer.gif" border="0" height="40" width="40">
                        <br> Fil de fer</a>
                    <a class="bouton is_bouton_molecular" href="javascript: pan_commande.commandes.hbonds.run()"><img src="images/hbond.png" border="0" height="40" width="40">
                        <br> Liaisons H</a>
                    <a class="bouton" href="javascript: pan_commande.commandes.baton_off.run()"><img src="images/noir.gif" border="0" height="40" width="40">
                        <br> Effacer
                    </a>
                </fieldset>
                <fieldset class="is_not_molecular">
                    <legend>
                        Afficher polyèdres
                    </legend>
                    <a class="bouton" href="javascript: pan_commande.commandes.polyhedra.run()"><img src="images/polyopaq.gif" border="0" height="40" width="40">
                        <br> Plein
                    </a>
                    <a class="bouton" href="javascript: pan_commande.commandes.polyhedra_translucent.run()"><img src="images/polyhedre2.gif" border="0" height="40" width="40">
                        <br> Translucide
                    </a>
                    <a class="bouton" href="javascript: pan_commande.commandes.polyhedra_collapsed.run()"><img src="images/polycoll.gif" border="0" height="40" width="40">
                        <br> Creux
                    </a>
                    <a class="bouton" href="javascript: pan_commande.commandes.polyhedra_off.run()"><img src="images/noir.gif" border="0" height="40" width="40">
                        <br> Effacer
                    </a>
                </fieldset>
                <fieldset class="is_menu_molecular">
                    <legend>
                        Afficher contacts
                    </legend>
                    <a class="bouton" href="javascript: pan_commande.commandes.contact_vdw.run()"><img src="images/contactvdw.png" border="0" height="40" width="40">
                        <br> Surface
                    </a>
                    <a class="bouton" href="javascript: pan_commande.commandes.contact_full.run()"><img src="images/contactfull.png" border="0" height="40" width="40">
                        <br> Zones
                    </a>
                    <a class="bouton" href="javascript: pan_commande.commandes.contact_connect.run()"><img src="images/contactconnect.png" border="0" height="40" width="40">
                        <br> Connexions
                    </a>
                    <a class="bouton" href="javascript: pan_commande.commandes.contact_off.run()"><img src="images/noir.gif" border="0" height="40" width="40">
                        <br> Effacer
                    </a>
                </fieldset>
                <fieldset>
                    <legend>
                        Activer/Désactiver
                    </legend>
                    <!--<a class="bouton" href="javascript: pan_commande.commandes.halos.run()">
						<img src="images/halo.jpg" alt="halos de s&eacute;lection" border="0" height="40" width="40"><br>Halos</a>-->
                    <a class="bouton" href="javascript: pan_commande.commandes.axes.run()"> <img src="images/axes.gif" border="0" height="40" width="40">
                        <br> Axes
                    </a>
                    <a class="bouton" href="javascript: pan_commande.commandes.charges.run()"> <img src="images/plus_moins.png" border="0" height="40" width="40">
                        <br> Charges
                    </a>
                    <!--<a class="bouton" href="javascript: pan_commande.commandes.picking.run()">
						<img src="images/souris.gif" border="0" height="25" width="18" style="vertical-align: middle; margin:1px 5px 0 5px;"><br>S&eacute;lection<br>Souris</a>-->
                    <a class="bouton" href="javascript: pan_commande.ligne_commande.visibility.toggle()"> <img src="images/form_text.gif" border="0" height="24" width="24" style="vertical-align: middle; margin:1px 5px 0 4px;">
                        <br> Entrer
                        <br> Scripts
                    </a>
                    <!--<a class="bouton" href="javascript: pan_commande.galerie.toggle()" style="padding-bottom: 7px"><img src="images/snapshot.gif" height="32" width="32" border="0">
						<br>
						Clich&eacute;s</a>-->
                    <a class="bouton" href="javascript: pan_commande.commandes.fond.run()"> <img src="images/contrast.png" border="0" height="40" width="40">
                        <br> Fond </a>

                    <a class="bouton" href="javascript: pan_commande.reglages.visibility.toggle()"> <img src="images/reglages.png" border="0" height="40" width="40">
                        <br> Réglages </a>
                </fieldset>

            </div>

        </div>

        <!--******************************** Onglet Fichier ***************************** -->
        <div id="fichier">
            <input type="search" id="recherche_fichiers" placeholder="Rechercher" />
            <ul id="liste_fichiers">

            </ul>
        </div>

        <!--******************************** Onglet Formule ***************************** -->
        <div id="formule">
            <fieldset id="panneau_controle_formule">
                <legend>
                    Restreindre l'affichage de la maille
                </legend>
                <a class="bouton" href="javascript: executer('display interieur')"> <img src="images/centre.png" width="100" height="100" />
                    <br/>
                    <span class="initiale">I</span>ntérieur de la maille </a>
                <a class="bouton" href="javascript: executer('display faces')"> <img src="images/face.png" width="100" height="100" />
                    <br/>
                    <span class="initiale">F</span>aces </a>
                <a class="bouton" href="javascript: executer('display aretes')"> <img src="images/arrete.png" width="100" height="100" />
                    <br/>
                    <span class="initiale">A</span>rêtes </a>
                <a class="bouton" href="javascript: executer('display sommets')"> <img src="images/sommet.png" width="100" height="100" />
                    <br/>
                    <span class="initiale">S</span>ommets </a>
                <hr class="separation" />
            </fieldset>

            <fieldset id="panneau_plans_maille">
                <legend>
                    Montrer/Cacher limites de mailles
                </legend>
                <a class="bouton" href="javascript: pan_commande.plans.set(1)"> <img src="images/planb.png" width="100" height="100" />
                    <br/> Maille ouverte </a>
                <a class="bouton" href="javascript: pan_commande.plans.set(2)"> <img src="images/plans.png" width="100" height="100" />
                    <br/> Maille fermée </a>
                <hr class="separation" />
            </fieldset>

            <form name="tableau_elements" id="tableau_elements" style="clear: both;">
                Compléter le tableau suivant :
                <table id="tableau_formule">
                    <thead>
                        <tr>
                            <td ondblclick="remplissage_automatique()">Atome</td>
                            <td>I</td>
                            <td>F</td>
                            <td>A</td>
                            <td>S</td>
                            <td>Total</td>
                            <td>Masse</td>
                            <td>%</td>
                        </tr>
                    </thead>
                    <tbody id="liste_elements">
                        <tr>
                            <td>Si</td>
                            <td>
                                <input type="text" size="2" />
                            </td>
                            <td>
                                <input type="text" size="2" />
                            </td>
                            <td>
                                <input type="text" size="2" />
                            </td>
                            <td>
                                <input type="text" size="2" />
                            </td>
                            <td>
                                <input type="text" size="2" />
                            </td>
                            <td>
                                <input type="text" size="2" />
                            </td>
                            <td>
                                <input type="text" size="2" />
                            </td>
                        </tr>
                    </tbody>
                </table>
                Masse volumique calculée : <span id="masse_volumique">0</span> g/cm<sup>3</sup>
                <br /> Compacité calculée : <span id="compacite">0</span> % (volume)
                <br /> Pourcentage d'hydratation : <span id="hydratation">0</span> % (masse)
            </form>

            <table id="tableau_caracteristiques">
                <thead>
                    <tr>
                        <td>Atome</td>
                        <td>Charge</td>
                        <td>Rayon (Å)</td>
                        <td>Masse (g.mol<sup>-1</sup>)</td>
                    </tr>
                </thead>
                <tbody id="liste_caracteristiques_elements">
                    <tr>
                        <td>Si</td>
                        <td>4 &plus;</td>
                        <td>1,5</td>
                        <td>24</td>
                    </tr>
                </tbody>
            </table>
        </div>
        <div id="vignette">
            <div id="aide">
                <iframe name="f_aide" id="fenetre" src="aide/demarrage.html" style="border: none" height="100%" width="100%"> </iframe>
            </div>
            <div id="commande">
                <span class="close" onclick="pan_commande.ligne_commande.visibility.toggle();">&times;</span>
                <form action="#" method="get" name="f_commande" style="margin: 0px; padding: 0px;" onsubmit="void(pan_commande.ligne_commande.executer(document.forms['f_commande'].ligne_commande.value)); return false;">
                    <input name="ligne_commande" id="ligne_commande" size="30">
                    <a class="bouton_ligne_commande" href="javascript: pan_commande.ligne_commande.undo()">&lt;</a><a class="bouton_ligne_commande" href="javascript: pan_commande.ligne_commande.redo()">&gt;</a>
                </form>
                <div id="messages"> </div>
            </div>
            <div id="reglages">
                <span class="close" onclick="pan_commande.reglages.visibility.toggle();">&times;</span>
                <hr style="clear: both; border:none;">
                <fieldset>
                    <legend>
                        Qualité d'affichage
                    </legend>
                    Min
                    <input id="qualite" type="range" value="6" step="1" max="8" min="0" onchange="pan_commande.reglages.setQuality(this.value)"> Max
                </fieldset>

            </div>
        </div>

    </div>
    <!--
		<div id="galerie">
			<a href="javascript: pan_commande.galerie.toggle();"><img src="images/fermer.gif" border="0" align="absmiddle"></a>
			Galerie
			<div id="thumbnails"> </div>
			<a class="bouton" href="#" onclick="pan_commande.commandes.fond.run()">Fond <img src="images/fond.png" border="0"></a>

			<a class="bouton" href="javascript: snapshot();">Clich&eacute; <img src="images/photo.gif" border="0"></a>
			<a class="bouton" id="exporter" href="dossiers.htm" target="_blank" onclick="if (document.location.href.indexOf('http')!=0) document.getElementById('exporter').href='export.htm'">Exporter <img src="images/upimg.gif" border="0"></a>
		</div>
-->
    <script>
    </script>
</body>

</html>